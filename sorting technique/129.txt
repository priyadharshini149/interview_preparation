def factRec(num,flag):  
    
    if len(A)==0:
        return 0
    if num%A[0]==0:
        if flag == 0:
            factList.append(num)
            flag = 1
        pivot = num/A[0]
        factList.append(int(pivot))
        return factRec(pivot,flag)
    else:
        pivot = num
        del A[0]
        return factRec(pivot,flag)
    
n,k = input().split()
n,k = int(n),int(k)
A = list(map(int,input().strip().split(' ')))
factList = []
flag = 0
A.sort(reverse=True)
x = factRec(n,flag)
if len(factList)== 0 or factList[-1]!=1:
    print(-1)
else:
    factList.reverse()
    print(*factList)



#!/bin/python

import math
import os
import random
import re
import sys

#
# Complete the 'superDigit' function below.
#
# The function is expected to return an INTEGER.
# The function accepts following parameters:
#  1. STRING n
#  2. INTEGER k
#

def superDigit(n, k):
    sum=0
    count=0
    
    while(n>0):
        rem=n%10
        count+=1
        sum+=rem
        n/=10
    if(count==1):
        return sum
    
    return superDigit(sum,0)


if __name__ == '__main__':
    fptr = open(os.environ['OUTPUT_PATH'], 'w')

    first_multiple_input = raw_input().rstrip().split()

    n = first_multiple_input[0]

    k = int(first_multiple_input[1])
    m=str(n)*k
    p=int(m)
    result = superDigit(p, k)

    fptr.write(str(result) + '\n')

    fptr.close()
 